user              nginx;
worker_processes  4;

events {
    use           epoll;
    worker_connections  128;
    accept_mutex        on; 
}


http {
    server_tokens off;
    include       mime.types;
    charset       utf-8;

    proxy_buffer_size 16k;
    proxy_buffers 16 16k;
    # header helpers for reverse proxied servers
    proxy_set_header        Host                    $host;                          # Ensures the actual hostname is sent to eXist-db and not 'localhost' (needed in eXist-db for server-name in controller-config.xml)
     proxy_set_header        X-Real-IP               $remote_addr;                   # The Real IP of the client and not the IP of nginx proxy
     proxy_set_header        X-Forwarded-For         $proxy_add_x_forwarded_for;
     proxy_set_header        nginx-request-uri       $request_uri;                   # The original URI before proxying




    send_timeout 15; # maximum time between packets nginx is allowed to pause when sending the client data
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;

     # Enable GZip
     gzip on;
     gzip_disable "msie6";
     gzip_vary on;
     gzip_proxied any;
     gzip_comp_level 6;
     gzip_min_length 256;
     gzip_buffers 16 8k;
     gzip_http_version 1.1;
     gzip_types text/plain text/css application/json application/javascript application/x-javascript text/xml application/xml application/xml+rss text/javascript image/jpeg image/jpg application/vnd.ms-fontobject application/x-font-ttf font/opentype image/svg+xml image/x-icon;

     # Adjust output buffers
     reset_timedout_connection on;
     server_names_hash_bucket_size 100;

    upstream backend_stationxml {
      server exist-fdsn-station:8080; 
      keepalive 32;
    } 



    server {
      listen        80;
      charset utf-8;
      server_tokens off;
      client_max_body_size 120M;

       root /exist;

       error_page    500 502 503 504  /50x.html;
       proxy_connect_timeout       120s; 

       location /fdsnws/station/1/ {

        # Reverse proxy rename se match url iniziale del servizio
        proxy_pass              http://backend_stationxml/exist/apps/fdsn-station/fdsnws/station/1/;
        proxy_http_version      1.1;
        
        #proxy_set_header       Content-Type "";
        #proxy_set_header       Connection "";

        proxy_send_timeout  600s;
        proxy_read_timeout  600s;
    }

       location /ingvws/virtualnetwork/1/codes {

        # Reverse proxy rename se match url iniziale del servizio
        proxy_pass              http://backend_stationxml/exist/apps/fdsn-station/virtualnetwork/1/codes;
        proxy_http_version      1.1;

        #proxy_set_header       Content-Type "";
        #proxy_set_header       Connection "";

        proxy_send_timeout  600s;
        proxy_read_timeout  600s;
    }

    location /exist/ {

        # Reverse proxy rename se match url iniziale del servizio
        proxy_pass              http://backend_stationxml/exist/;
        proxy_http_version      1.1;
    }

    }

   

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"'
                      ' - "$http_request_expect"';
    access_log  /var/log/nginx/access.log;
    error_log  /var/log/nginx/error.log error;
    rewrite_log on;

}


